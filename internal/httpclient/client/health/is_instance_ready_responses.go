// Code generated by go-swagger; DO NOT EDIT.

package health

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ory/oathkeeper/internal/httpclient/models"
)

// IsInstanceReadyReader is a Reader for the IsInstanceReady structure.
type IsInstanceReadyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IsInstanceReadyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIsInstanceReadyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 503:
		result := NewIsInstanceReadyServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewIsInstanceReadyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIsInstanceReadyOK creates a IsInstanceReadyOK with default headers values
func NewIsInstanceReadyOK() *IsInstanceReadyOK {
	return &IsInstanceReadyOK{}
}

/*
IsInstanceReadyOK describes a response with status code 200, with default header values.

healthStatus
*/
type IsInstanceReadyOK struct {
	Payload *models.HealthStatus
}

// IsSuccess returns true when this is instance ready o k response has a 2xx status code
func (o *IsInstanceReadyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this is instance ready o k response has a 3xx status code
func (o *IsInstanceReadyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this is instance ready o k response has a 4xx status code
func (o *IsInstanceReadyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this is instance ready o k response has a 5xx status code
func (o *IsInstanceReadyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this is instance ready o k response a status code equal to that given
func (o *IsInstanceReadyOK) IsCode(code int) bool {
	return code == 200
}

func (o *IsInstanceReadyOK) Error() string {
	return fmt.Sprintf("[GET /health/ready][%d] isInstanceReadyOK  %+v", 200, o.Payload)
}

func (o *IsInstanceReadyOK) String() string {
	return fmt.Sprintf("[GET /health/ready][%d] isInstanceReadyOK  %+v", 200, o.Payload)
}

func (o *IsInstanceReadyOK) GetPayload() *models.HealthStatus {
	return o.Payload
}

func (o *IsInstanceReadyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HealthStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIsInstanceReadyServiceUnavailable creates a IsInstanceReadyServiceUnavailable with default headers values
func NewIsInstanceReadyServiceUnavailable() *IsInstanceReadyServiceUnavailable {
	return &IsInstanceReadyServiceUnavailable{}
}

/*
IsInstanceReadyServiceUnavailable describes a response with status code 503, with default header values.

healthNotReadyStatus
*/
type IsInstanceReadyServiceUnavailable struct {
	Payload *models.HealthNotReadyStatus
}

// IsSuccess returns true when this is instance ready service unavailable response has a 2xx status code
func (o *IsInstanceReadyServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this is instance ready service unavailable response has a 3xx status code
func (o *IsInstanceReadyServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this is instance ready service unavailable response has a 4xx status code
func (o *IsInstanceReadyServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this is instance ready service unavailable response has a 5xx status code
func (o *IsInstanceReadyServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this is instance ready service unavailable response a status code equal to that given
func (o *IsInstanceReadyServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *IsInstanceReadyServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /health/ready][%d] isInstanceReadyServiceUnavailable  %+v", 503, o.Payload)
}

func (o *IsInstanceReadyServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /health/ready][%d] isInstanceReadyServiceUnavailable  %+v", 503, o.Payload)
}

func (o *IsInstanceReadyServiceUnavailable) GetPayload() *models.HealthNotReadyStatus {
	return o.Payload
}

func (o *IsInstanceReadyServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HealthNotReadyStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIsInstanceReadyDefault creates a IsInstanceReadyDefault with default headers values
func NewIsInstanceReadyDefault(code int) *IsInstanceReadyDefault {
	return &IsInstanceReadyDefault{
		_statusCode: code,
	}
}

/*
IsInstanceReadyDefault describes a response with status code -1, with default header values.

unexpectedError
*/
type IsInstanceReadyDefault struct {
	_statusCode int

	Payload models.UnexpectedError
}

// Code gets the status code for the is instance ready default response
func (o *IsInstanceReadyDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this is instance ready default response has a 2xx status code
func (o *IsInstanceReadyDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this is instance ready default response has a 3xx status code
func (o *IsInstanceReadyDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this is instance ready default response has a 4xx status code
func (o *IsInstanceReadyDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this is instance ready default response has a 5xx status code
func (o *IsInstanceReadyDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this is instance ready default response a status code equal to that given
func (o *IsInstanceReadyDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *IsInstanceReadyDefault) Error() string {
	return fmt.Sprintf("[GET /health/ready][%d] isInstanceReady default  %+v", o._statusCode, o.Payload)
}

func (o *IsInstanceReadyDefault) String() string {
	return fmt.Sprintf("[GET /health/ready][%d] isInstanceReady default  %+v", o._statusCode, o.Payload)
}

func (o *IsInstanceReadyDefault) GetPayload() models.UnexpectedError {
	return o.Payload
}

func (o *IsInstanceReadyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
